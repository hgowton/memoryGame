{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/ScoreCard/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","updateFriend","id","alt","name","src","image","Wrapper","children","ScoreCard","count","score","topScore","App","state","friends","handleIncrement","setState","handleScoreIncrement","handleTopScoreIncrement","console","log","correct","savedFriends","map","element","newElt","clicked","resetGame","sort","a","b","Math","random","resetData","item","this","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"k5DAoBeA,MAjBf,SAAoBC,GAChB,OACI,yBAAKC,UAAU,cAAcC,QAAS,WACrCF,EAAMG,aAAaH,EAAMI,MAItB,yBAAKH,UAAU,iBACX,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAErC,yBAAKP,UAAU,WACX,4BAAKD,EAAMM,S,MCPZG,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCc1BC,MAdf,SAAmBX,GACjB,OACA,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YAAf,eACeD,EAAMY,OAErB,yBAAKX,UAAU,YAAf,UACUD,EAAMa,MADhB,gBACoCb,EAAMc,a,OCgFjCC,E,4MApFbC,MAAM,CACJJ,MAAO,EACPC,MAAO,EACPI,QAASA,EACTH,SAAU,G,EAGZI,gBAAkB,WAChB,EAAKC,SAAS,CAACP,MAAO,EAAKI,MAAMJ,MAAQ,K,EAG3CQ,qBAAuB,WACrB,EAAKD,SAAS,CAACN,MAAO,EAAKG,MAAMH,MAAQ,M,EAG3CQ,wBAA0B,WACpB,EAAKL,MAAMH,OAAS,EAAKG,MAAMF,WACjCQ,QAAQC,IAAI,kBACZ,EAAKJ,SAAS,CAACL,SAAU,EAAKE,MAAMH,MAAQ,O,EAOhDV,aAAe,SAAAC,GACb,IAAIoB,GAAU,EAEVC,EAAe,EAAKT,MAAMC,QAAQS,KAAK,SAAAC,GAGzC,IAAIC,EAAM,eAAOD,GAUjB,OATGC,EAAOxB,KAAOA,IACfkB,QAAQC,IAAIK,EAAOtB,MAChBsB,EAAOC,QACRP,QAAQC,IAAI,mBAAqBK,EAAOC,UAExCL,GAAU,EACVI,EAAOC,SAAU,IAGdD,KAET,IAAIJ,EAKF,OAAO,EAAKM,YAJZ,EAAKZ,kBACL,EAAKE,uBACL,EAAKC,0BAIPI,EAAaM,MAAK,SAACC,EAAEC,GAAH,OAASC,KAAKC,SAAW,MAC3C,EAAKhB,SAAS,CAACF,QAASQ,K,EAG1BK,UAAY,WACVR,QAAQC,IAAI,oBAEZ,IAAMa,EAAY,EAAKpB,MAAMC,QAAQS,KAAI,SAAAW,GAAI,kCAAUA,GAAV,IAAgBR,SAAS,OACtE,EAAKV,SAAS,CAAEP,MAAO,EAAGC,MAAO,EAAGI,QAASmB,K,uDAIrC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWxB,MAAO0B,KAAKtB,MAAMJ,MAAOC,MAAOyB,KAAKtB,MAAMH,MAAOC,SAAUwB,KAAKtB,MAAMF,WACjFwB,KAAKtB,MAAMC,QAAQS,KAAI,SAAAa,GAAM,OAC5B,kBAAC,EAAD,CACApC,aAAc,EAAKA,aACnBS,MAAO,EAAKI,MAAMJ,MAClBM,gBAAiB,EAAKA,gBACtBE,qBAAsB,EAAKA,qBAC3BC,wBAAyB,EAAKA,wBAC9BjB,GAAImC,EAAOnC,GACXoC,IAAKD,EAAOnC,GACZE,KAAMiC,EAAOjC,KACbE,MAAO+B,EAAO/B,gB,GA9ENiC,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.119e397e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nfunction FriendCard(props) {\n    return(\n        <div className=\"card select\" onClick={() => \n        {props.updateFriend(props.id);\n        ;\n        }}>\n\n            <div className=\"img-container\" >\n                <img alt={props.name} src={props.image} />\n            </div>\n            <div className=\"content\">\n                <h4>{props.name}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default FriendCard;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\"\n\n\nfunction ScoreCard(props) {\n  return (\n  <div className=\"container scoreCard\">\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        Card Count: {props.count}\n      </div>\n      <div className=\"col-md-6\">\n        Score: {props.score} High Score: {props.topScore}\n      </div>\n    </div>\n  </div>)\n}\n\nexport default ScoreCard;","import React, {Component} from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport ScoreCard from \"./components/ScoreCard\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  //Setting this.state.friends to the friends json array\n  state={\n    count: 0,\n    score: 0,\n    friends: friends,\n    topScore: 0,\n  };\n\n  handleIncrement = () => {\n    this.setState({count: this.state.count + 1});\n  }\n\n  handleScoreIncrement = () => {\n    this.setState({score: this.state.score + 10})\n  }\n\n  handleTopScoreIncrement = () => {\n    if (this.state.score >= this.state.topScore) {\n      console.log(\"topscore lower\")\n      this.setState({topScore: this.state.score + 10})\n    }\n\n    }\n  \n\n  //sorts cards on page\n  updateFriend = id => {\n    let correct = false;\n\n    let savedFriends = this.state.friends.map( element => {\n      // if the ID has already been clicked, then restart the game\n\n      let newElt = {...element}\n      if(newElt.id === id) {\n        console.log(newElt.name)\n        if(newElt.clicked) {\n          console.log(\"already clicked \" + newElt.clicked)\n        } else {\n          correct = true;\n          newElt.clicked = true\n        }\n      }\n      return newElt\n    })\n    if (correct) {\n      this.handleIncrement();\n      this.handleScoreIncrement();\n      this.handleTopScoreIncrement();\n    } else {\n      return this.resetGame();\n    }\n    savedFriends.sort((a,b) => Math.random() - 0.5);\n    this.setState({friends: savedFriends});\n  };\n  \n  resetGame = () => {\n    console.log(\"made it to reset\")\n    //resets friends array to json (fixes all true to false)\n    const resetData = this.state.friends.map(item => ({ ...item, clicked: false }));\n    this.setState({ count: 0, score: 0, friends: resetData })\n  }\n\n  //Map over this.state.friends and rend a FriendCard component for each friend object\n  render() {\n    return(\n      <Wrapper>\n        <ScoreCard count={this.state.count} score={this.state.score} topScore={this.state.topScore}/>\n        {this.state.friends.map(friend => (\n          <FriendCard\n          updateFriend={this.updateFriend}\n          count={this.state.count}\n          handleIncrement={this.handleIncrement}\n          handleScoreIncrement={this.handleScoreIncrement}\n          handleTopScoreIncrement={this.handleTopScoreIncrement}\n          id={friend.id}\n          key={friend.id}\n          name={friend.name}\n          image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}